Using AXIS2_HOME:   ..\figis-axis2-home\axis2-1.5
Using JAVA_HOME:    C:\Program Files\Java\jdk1.6.0_13
Usage: WSDL2Java [options] -uri <url or path> : A url or path to a WSDL

where [options] include:
  -o <path>                Specify a directory path for the generated code.
  -a                       Generate async style code only (Default: off).
  -s                       Generate sync style code only (Default: off). Takes precedence over -a.
  -p <pkg1>                Specify a custom package name for the generated code.
  -l <language>            Valid languages are java and c (Default: java).
  -t                       Generate a test case for the generated code.
  -ss                      Generate server side code (i.e. skeletons) (Default: off).
  -sd                      Generate service descriptor (i.e. services.xml). (Default: off). Valid with -ss.
  -d <databinding>         Valid databinding(s) are adb, xmlbeans, jibx and jaxbri (Default: adb).
  -g                       Generates all the classes. Valid only with -ss.
  -pn <port_name>          Choose a specific port when there are multiple ports in the wsdl.
  -sn <service_name>       Choose a specific service when there are multiple services in the wsdl.
  -u                       Unpacks the databinding classes
  -r <path>                Specify a repository against which code is generated.
  -ns2p ns1=pkg1,ns2=pkg2  Specify a custom package name for each namespace specified in the wsdls schema.
  -ssi                     Generate an interface for the service implementation (Default: off).
  -wv <version>            WSDL Version. Valid Options : 2, 2.0, 1.1
  -S <path>                Specify a directory path for generated source
  -R <path>                Specify a directory path for generated resources
  -em <file path>          Specify an external mapping file
  -f                       Flattens the generated files
  -uw                      Switch on un-wrapping.
  -xsdconfig <file path>   Use XMLBeans .xsdconfig file. Valid only with -d xmlbeans.
  -ap                      Generate code for all ports
  -or                      Overwrite the existing classes
  -b                       Generate Axis 1.x backward compatible code.
  -sp                      Suppress namespace prefixes (Optimzation that reduces size of soap request/response)
  -E<key> <value>          Extra configuration options specific to certain databindings. Examples:
  			   -Ebindingfile <path>                   (for jibx) - specify the file path for the binding file
  			   -Etypesystemname <my_type_system_name> (for xmlbeans) - override the randomly generated type system name
  			   -Ejavaversion 1.5                      (for xmlbeans) - generates Java 1.5 code (typed lists instead of arrays) 
  			   -Emp <package name> (for ADB) - extension mapper package name
  			   -Eosv (for ADB) - turn off strict validation.
  			   -Ewdc (for xmlbeans) - Generate code with a dummy schema. if someone use this option
  			      they have to generate the xmlbeans code seperately with the scomp command comes with the
  			      xmlbeans distribution and replace the Axis2 generated classes with correct classes
  --noBuildXML             Dont generate the build.xml in the output directory
  --noWSDL                 Dont generate WSDLs in the resources directory
  --noMessageReceiver      Dont generate a MessageReceiver in the generated sources
  --http-proxy-host <host> Proxy host address if you are behind a firewall
  --http-proxy-port <port> Proxy port address if you are behind a firewall
  -ep <package-name-list>  Exclude packages - these packages are deleted after code generation
  -sin <interface-name>    Skeleton interface name - used to specify a name for skeleton interface other than the default one 
  -scn <class-name>        Skeleton class name - used to specify a name for skeleton class other than the default one
  			   -EbindingFileName <path>               (for jaxbri) - specify the file path for the episode file
  -oaa <override-absolute-address>  -change the absolute http addresses to local file addresses generated by wsdl2java tool
  -ebc <exception-base-class>  -generated Exceptions are inherited from this exception rather than the java.lang.Exception class
  -uon <use-operation-name>  -by default the first letter of the generated method name changeed to lowercase. This option stops that and make it same as operation name
